@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300;400;700&display=swap');
*{
    margin: 0;
    padding: 0;
    border: 0;
    outline: 0;
    box-sizing: border-box;
    list-style: none;
    text-decoration: none!important;
}
:root{
   --bg-color:#020225; 
   --bg-color-varient:#1b1b59; 
   --color-primary:#e5958e;
   --color-white:#fff;
   --color-light:rgba(255,255,255,0.8);
   --transition: all 400ms ease;
}
::-webkit-scrollbar{
    display: none;
}
html{scroll-behavior: smooth;}
body{
    font-family: 'Lato', sans-serif;
    background: var(--bg-color);
    color: var(--color-white);
    line-height: 1.7;
}

h1,h2,h3,h4,h5{font-weight: 700;}
h1{font-size: 2.5rem;}
section{
    margin-top: 8rem;
    /* height: 100vh; */
}
section > h2, section > h5{
    text-align: center;
    color:var(--color-light);
}
section > h2 {
    color: var(--color-primary);
    margin-bottom: 3rem;
}
.text-light{
    color: var(--color-light)!important;
}
a {
    color: var(--color-primary);
    transition: var(--transition);
}
a:hover{
    color: var(--color-white);
}
 .btn-custom{
    color: var(--color-primary);
    border-radius: 0.4rem;
    cursor: pointer;
    border: 1px solid var(--color-primary);
    transition: var(--transition);
}
.btn:hover, .btn.active,  .btn-custom.active{
    background: var(--color-white)!important;
    color: var(--bg-color)!important;
    border-color: transparent;
}
.btn-primary {
    background: var(--color-primary)!important;;
    color: var(--bg-color)!important;;
}
.btn-primary:hover {
    background: var(--color-white)!important;;

}
img{
    display: block;
    width: 100%;
    object-fit: cover;
}
.alert{
    z-index: 3423;
    position: fixed;
    left: 50%;
    transform: translateX(-50%);
    width: 60%;
    top: 2%;
}
.close {
    float: right;
    font-size: 1.5rem;
    font-weight: 700;
    line-height: 1;
    color: #000;
    text-shadow: 0 1px 0 #fff;
    opacity: .5;
  }
  
  .close:hover, .close:focus {
    color: #000;
    text-decoration: none;
    opacity: .75;
  }
  
  .close:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
  
  button.close {
    padding: 0;
    background-color: transparent;
    border: 0;
    -webkit-appearance: none;
  }
  .btn-danger{
    color: var(--color-white)!important;
  }
  .btn-danger:hover{
    color: red!important;
  }
  .btn.disabled, .btn:disabled{
    border: none;
    opacity:1;
    position: relative;
    content: "";
  }
  .btn.disabled .btn-text, .btn:disabled .btn-text  {
    visibility: hidden;
    opacity: 0;
  }
  .btn.disabled::after,  .btn:disabled::after {
    content: "";
    position: absolute;
    width: 30px;
    height: 30px;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    border: 4px solid #fff;
    border-right-color: transparent;
    border-radius: 50%;
    animation: button-loading-spinner 1s ease infinite;
  }

  .modal.show{
    display: block;
  }
  .modal-body{
    color: var(--bg-color);
  }
  label{
    color: var(--color-primary);
  }
.sweet-loading{
  display: flex;
  height: 100vh;
  width: 100vw;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 2222222222223;
  background: var(--bg-color);
  transition: var(--transition);
}
.modal.show{
  background: rgba(255,255,255,0.3);
}
.ReactTags__selected span.ReactTags__tag {
  background: var(--color-primary);
  font-size: 13px;
  display: inline-block;
  padding: 6px;
  margin: 0 5px 5px 5px;
  cursor: default !important;
  border-radius: 7px;
}
.ReactTags__selected button.ReactTags__remove {
  background: var(--bg-color-varient);
  color: var(--white);
  margin-left: 5px;
  cursor: pointer;
  border: none;
  border-radius: 7px;
  margin: 0px 5px;
  padding: 0px 8px;
  font-size: 1.2em;
}
.sidebar-links a{
  padding: 10px 0;
}

/*---------------media queries-----------------*/
@media screen and (max-width:1024px) {
    section{
        margin-top: 6rem;
    }
    section > h2 {
        margin-bottom:2rem;
    }
}

@media screen and (max-width:480px) {
 .alert{
  width: 85%;
 }
}
@keyframes button-loading-spinner {
  from {
    transform: rotate(0turn);
  }

  to {
    transform: rotate(1turn);
  }
}